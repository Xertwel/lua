local tool = script.Parent

local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local userInputService = game:GetService("UserInputService")
local debris = game:GetService("Debris")
local physicsService = game:GetService("PhysicsService")
local runService = game:GetService("RunService")
local starterGui = game:GetService("StarterGui")

local remotes = replicatedStorage:WaitForChild("Remotes")
local notifyClient = remotes:WaitForChild("Notify")
local meleeRemote = remotes:WaitForChild("Melee")
local kickRemote = tool:WaitForChild("Script"):WaitForChild("Kick")

local player = players.LocalPlayer
local mouse = player:GetMouse()
local character = workspace.Characters:WaitForChild(player.Name)
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animations = tool:WaitForChild("Animations")
local attack1 = animator:LoadAnimation(animations:WaitForChild("Attack1"))
local attack2 = animator:LoadAnimation(animations:WaitForChild("Attack2"))
local kick = animator:LoadAnimation(animations:WaitForChild("Kick"))

equipped = false
currentCombo = 1
cooldown = 0.4
lastUse = 0

alreadyHit = {}
blacklist = {}

function GetTouchingParts(part)
	local connection = part.Touched:Connect(function() end)
	local results = part:GetTouchingParts()
	connection:Disconnect()
	return results
end

tool.Equipped:Connect(function()
	equipped = true
end)

tool.Unequipped:Connect(function()
	equipped = false
end)

tool.Activated:Connect(function()
	if os.clock() - lastUse < cooldown then return end
	lastUse = os.clock()
	if currentCombo == 1 then
		attack1:Play()
		currentCombo = 2
		
		task.spawn(function()
			while attack1.IsPlaying do
				local inRegion = GetTouchingParts(character["Right Arm"])
				for i, v in pairs(inRegion) do
					if table.find(blacklist, v) then
						continue
					end
					if table.find(alreadyHit, v) then
						continue
					end
					if v:IsDescendantOf(character) then
						table.insert(blacklist, v)
						continue
					end
					if v.Name == "HumanoidRootPart" then
						table.insert(blacklist, v)
						continue
					end
					if v.Parent:IsA("Model") and v.Parent:FindFirstChildWhichIsA("Humanoid") then
						local hitCharacter = v.Parent
						for _, vv in pairs(hitCharacter:GetChildren()) do
							if vv:IsA("BasePart") then
								table.insert(alreadyHit, vv)
							end
						end
						meleeRemote:FireServer(tool, v)
						break
					end
					table.insert(blacklist, v)
				end
				task.wait()
			end
			table.clear(alreadyHit)
		end)
	else
		attack2:Play()
		currentCombo = 1
		
		task.spawn(function()
			while attack2.IsPlaying do
				local inRegion = GetTouchingParts(character["Left Arm"])
				for i, v in pairs(inRegion) do
					if table.find(blacklist, v) then
						continue
					end
					if table.find(alreadyHit, v) then
						continue
					end
					if v:IsDescendantOf(character) then
						table.insert(blacklist, v)
						continue
					end
					if v.Name == "HumanoidRootPart" then
						table.insert(blacklist, v)
						continue
					end
					if v.Parent:IsA("Model") and v.Parent:FindFirstChildWhichIsA("Humanoid") then
						local hitCharacter = v.Parent
						for _, vv in pairs(hitCharacter:GetChildren()) do
							if vv:IsA("BasePart") then
								table.insert(alreadyHit, vv)
							end
						end
						meleeRemote:FireServer(tool, v)
						break
					end
					table.insert(blacklist, v)
				end
				task.wait()
			end
			table.clear(alreadyHit)
		end)
	end
end)

userInputService.InputBegan:Connect(function(key, gp)
	if gp then return end
	if not equipped then return end
	if os.clock() - lastUse < cooldown then return end
	if key.KeyCode == Enum.KeyCode.F then
		lastUse = os.clock() + 0.15
		kick:Play()
		
		task.spawn(function()
			while kick.IsPlaying do
				local inRegion = GetTouchingParts(character["Right Leg"])
				for i, v in pairs(inRegion) do
					if table.find(blacklist, v) then
						continue
					end
					if table.find(alreadyHit, v) then
						continue
					end
					if v:IsDescendantOf(character) then
						table.insert(blacklist, v)
						continue
					end
					if v.Name == "HumanoidRootPart" then
						table.insert(blacklist, v)
						continue
					end
					if v.Parent:IsA("Model") and v.Parent:FindFirstChildWhichIsA("Humanoid") then
						local hitCharacter = v.Parent
						for _, vv in pairs(hitCharacter:GetChildren()) do
							if vv:IsA("BasePart") then
								table.insert(alreadyHit, vv)
							end
						end
						kickRemote:FireServer(tool, v)
						break
					end
					table.insert(blacklist, v)
				end
				task.wait()
			end
			table.clear(alreadyHit)
		end)
	end
end)
